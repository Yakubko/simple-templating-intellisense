{"version":3,"sources":["webpack://Autocomplete/./src/List/ListDOM.ts","webpack://Autocomplete/./src/List/index.ts","webpack://Autocomplete/./src/EventsInterface.ts","webpack://Autocomplete/./src/Register.ts","webpack://Autocomplete/./src/index.ts","webpack://Autocomplete/webpack/bootstrap","webpack://Autocomplete/webpack/startup","webpack://Autocomplete/webpack/runtime/define property getters","webpack://Autocomplete/webpack/runtime/hasOwnProperty shorthand"],"names":["ListDOM","ulElement","mainElement","measurementsHelpers","this","textArea","document","createElement","fontCanvasCtx","getContext","attributes","name","style","border","height","overflow","padding","position","left","top","zIndex","className","appendChild","addEventListener","window","body","data","innerHTML","map","item","index","join","getElementsByClassName","classList","remove","children","add","scrollIntoView","behavior","block","display","element","getBoundingClientRect","getCaretPosition","caretLeft","caretTop","computedStyle","getComputedStyle","value","selectionStart","text","substr","fontSize","fontFamily","paddingLeft","paddingTop","parseInt","nodeName","paddingRight","lineHeight","font","letterSpacing","whiteSpace","wordBreak","wordSpacing","wordWrap","width","clientWidth","Math","floor","scrollHeight","scrollTop","lastIndexOf","newSelectionStart","textAreaScrollHeight","fontSpec","round","measureText","scrollLeft","listDOM","registersData","activeRegister","scrollableElements","state","visible","partialFilter","selectedIndex","registerName","isSameNode","detach","getParentsConf","scrollable","getElement","toString","forEach","node","align","removeEventListener","event","type","hide","alignTo","show","bindData","filter","getFilteredData","length","direction","mod","select","path","pathList","split","filteredData","fnGetScopeLevel","_path","_data","key","shift","retData","Object","keys","sort","startsWith","push","clientHeight","tagName","max","getPropertyValue","parentNode","n","m","EventInterface","ignoreOneTimeKeyUpEvent","List","keyup","keydown","caretPosition","addValueString","bracketActiveWord","getBracketActiveWord","addSuggestedString","includes","preventDefault","selectionEnd","addValue","slice","valueInBrackets","indexOf","startIndex","endIndex","endIndexReverse","startSpacePosition","endSpacePosition","Register","elements","some","el","EventsInterface","unbind","Autocomplete","group","groups","undefined","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"autocomplete.min.js","sourcesContent":["import { AllowedElements } from '../types';\nimport './style.css';\n\ntype MeasurementsHelpers = {\n    textArea: HTMLTextAreaElement;\n    fontCanvasCtx: CanvasRenderingContext2D;\n};\n\nexport default class ListDOM {\n    private ulElement: HTMLElement;\n    private mainElement: HTMLElement;\n\n    private measurementsHelpers: MeasurementsHelpers;\n\n    constructor() {\n        this.measurementsHelpers = {\n            textArea: document.createElement('textarea'),\n            fontCanvasCtx: document.createElement('canvas').getContext('2d'),\n        };\n        ((attributes) => {\n            for (const name in attributes) {\n                this.measurementsHelpers.textArea.style[name] = attributes[name];\n            }\n        })({ border: 'none', height: '0', overflow: 'hidden', padding: '0', position: 'absolute', left: '0', top: '0', zIndex: '-1' });\n\n        this.mainElement = document.createElement('div');\n        this.mainElement.className = 'a-body';\n\n        this.ulElement = document.createElement('ul');\n        this.ulElement.className = 'ui-autocomplete';\n\n        this.mainElement.appendChild(this.ulElement);\n        this.mainElement.appendChild(this.measurementsHelpers.textArea);\n\n        document.addEventListener('DOMContentLoaded', () => {\n            window.document.body.appendChild(this.mainElement);\n        });\n    }\n\n    getElement(): HTMLElement {\n        return this.mainElement;\n    }\n\n    bindData(data: string[]): void {\n        this.ulElement.innerHTML = data.map((item, index) => '<li' + (index === 0 ? ' class=\"ui-state-focus\"' : '') + '>' + item + '</li>').join('');\n    }\n\n    select(index: number): void {\n        this.ulElement.getElementsByClassName('ui-state-focus')[0].classList.remove('ui-state-focus');\n\n        this.ulElement.children[index].classList.add('ui-state-focus');\n        this.ulElement.children[index].scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n        });\n    }\n\n    show(): void {\n        this.mainElement.style.display = 'block';\n    }\n\n    hide(): void {\n        this.ulElement.innerHTML = '';\n        this.mainElement.style.display = 'none';\n    }\n\n    alignTo(element: AllowedElements): void {\n        const { left, top } = element.getBoundingClientRect();\n        const { left: caretLeft, top: caretTop } = this.getCaretPosition(element);\n\n        this.mainElement.style.left = caretLeft + left + 'px';\n        this.mainElement.style.top = top + caretTop + 'px';\n    }\n\n    private getCaretPosition(element: AllowedElements): { left: number; top: number } {\n        const computedStyle = window.getComputedStyle(element);\n        const { value, selectionStart } = element;\n        const { fontCanvasCtx, textArea } = this.measurementsHelpers;\n\n        let text = value.substr(0, selectionStart);\n        const { fontSize, fontFamily, paddingLeft, paddingTop } = computedStyle;\n        let height = parseInt(fontSize);\n        let top = height;\n        switch (element.nodeName) {\n            case 'TEXTAREA':\n                const { paddingRight, lineHeight, font, letterSpacing, whiteSpace, wordBreak, wordSpacing, wordWrap } = computedStyle;\n                height = parseInt(lineHeight) || height;\n\n                ((attributes) => {\n                    for (const name in attributes) {\n                        textArea.style[name] = attributes[name];\n                    }\n                })({ width: element.clientWidth - parseInt(paddingLeft) - parseInt(paddingRight) + 'px', font, fontSize, fontFamily, letterSpacing, whiteSpace, wordBreak, wordSpacing, wordWrap });\n\n                textArea.value = text;\n                const lines = Math.floor((textArea.scrollHeight - element.scrollTop) / height) || 1;\n                top = lines * height + Math.floor(element.scrollTop % height) + 5;\n                text = text.substr(text.lastIndexOf('\\n') + 1);\n                textArea.value = text;\n\n                let newSelectionStart = -1;\n                const textAreaScrollHeight = textArea.scrollHeight;\n                while (textAreaScrollHeight === textArea.scrollHeight && Math.floor(textArea.scrollHeight / height) > 1) {\n                    if (newSelectionStart > 200) break;\n                    newSelectionStart = textArea.value.lastIndexOf(' ');\n                    textArea.value = textArea.value.substr(0, textArea.value.lastIndexOf(' '));\n                }\n                text = text.substr(newSelectionStart + 1);\n                break;\n\n            case 'INPUT':\n                top += 10;\n                break;\n        }\n\n        const fontSpec = `${fontSize} ${fontFamily || 'sans-serif'}`;\n        if (fontCanvasCtx.font !== fontSpec) fontCanvasCtx.font = fontSpec;\n\n        return { left: Math.round(fontCanvasCtx.measureText(text).width) - element.scrollLeft + parseInt(paddingLeft), top: top + parseInt(paddingTop) };\n    }\n}\n","import ListDOM from './ListDOM';\nimport { AllowedElements } from '../types';\n\nexport type ListData = Record<string, any>;\n\ntype ListActiveRegister = {\n    name: string;\n    element: AllowedElements | null;\n    scrollableElements: (AllowedElements | Window)[];\n};\ntype ListState = {\n    visible: boolean;\n    data: string[];\n    partialFilter: string;\n    selectedIndex: number;\n};\n\nclass List {\n    private listDOM: ListDOM;\n    private registersData: Record<string, ListData> = {};\n    private activeRegister: ListActiveRegister = {\n        element: null,\n        name: '',\n        scrollableElements: [],\n    };\n\n    private state: ListState = {\n        visible: false,\n        data: [],\n        partialFilter: '',\n        selectedIndex: 0,\n    };\n\n    constructor() {\n        this.listDOM = new ListDOM();\n    }\n\n    data(name: string, data?: ListData): ListData {\n        if (data) this.registersData[name] = data;\n\n        return this.registersData[name];\n    }\n\n    getState(): ListState {\n        return this.state;\n    }\n\n    attach(registerName: string, element: AllowedElements): void {\n        if (this.activeRegister.element) {\n            if (element.isSameNode(this.activeRegister.element)) return;\n            else this.detach();\n        }\n\n        const { scrollable, zIndex } = this.getParentsConf(element);\n\n        this.activeRegister.name = registerName;\n        this.activeRegister.element = element;\n        this.activeRegister.scrollableElements = scrollable;\n\n        this.listDOM.getElement().style.zIndex = zIndex ? (zIndex + 1).toString() : 'auto';\n\n        this.activeRegister.scrollableElements.forEach((node) => {\n            node.addEventListener('scroll', this, false);\n        });\n\n        this.align();\n    }\n\n    detach(): void {\n        this.activeRegister.scrollableElements.forEach((node) => {\n            node.removeEventListener('scroll', this, false);\n        });\n\n        this.activeRegister.name = '';\n        this.activeRegister.element = null;\n        this.activeRegister.scrollableElements = [];\n    }\n\n    handleEvent(event: Event): void {\n        if (event.type === 'scroll') this.hide();\n    }\n\n    align(): void {\n        if (this.state.visible) this.listDOM.alignTo(this.activeRegister.element);\n    }\n\n    show(): void {\n        if (this.state.visible) return;\n\n        this.state = { ...this.state, visible: true };\n        this.listDOM.show();\n    }\n\n    hide(): void {\n        this.state = { ...this.state, visible: false };\n        this.listDOM.hide();\n    }\n\n    bindData(data: string[]): void {\n        this.state = { ...this.state, selectedIndex: 0 };\n        this.listDOM.bindData(data);\n    }\n\n    filter(filter: string): void {\n        const { partialFilter, data } = this.getFilteredData(filter);\n        this.state = { ...this.state, partialFilter, data };\n\n        if (data.length > 0) {\n            this.show();\n            this.bindData(data);\n        } else this.hide();\n    }\n\n    selectByDirection(direction: 'up' | 'down'): void {\n        if (this.state.data.length > 1) {\n            this.state.selectedIndex = this.mod(this.state.selectedIndex + (direction === 'down' ? 1 : -1), this.state.data.length);\n            this.listDOM.select(this.state.selectedIndex);\n        }\n    }\n\n    private getFilteredData(path: string): { partialFilter: string; data: string[] } {\n        const data = this.registersData[this.activeRegister.name];\n        const fnGetScopeLevel = (_path: string[], _data: ListData) => {\n            if (_path.length > 1) {\n                const key = _path.shift();\n                if (_data[key]) {\n                    return fnGetScopeLevel(_path, _data[key]);\n                }\n                return null;\n            } else if (_path.length === 1) {\n                return _data;\n            }\n\n            return null;\n        };\n\n        const pathList = path.split('.');\n        const filteredData = fnGetScopeLevel(pathList, data);\n        let retData = filteredData ? Object.keys(filteredData) : [];\n        retData.sort();\n\n        if (retData && pathList[0]) {\n            retData = retData.filter((item) => item.startsWith(pathList[0]));\n            if (retData.length === 1 && pathList[0] === retData[0]) {\n                retData = [];\n            }\n        }\n\n        return { partialFilter: pathList[0], data: retData };\n    }\n\n    private getParentsConf(\n        node: AllowedElements,\n        data: { scrollable: (AllowedElements | Window)[]; zIndex: number } = {\n            scrollable: [],\n            zIndex: 0,\n        },\n    ): { scrollable: (AllowedElements | Window)[]; zIndex: number } {\n        if (node == null) return data;\n        if (node === document.body) {\n            data.scrollable.push(window);\n            return data;\n        }\n\n        if (node.scrollHeight > node.clientHeight || node.tagName === 'TEXTAREA') {\n            data.scrollable.push(node);\n        }\n\n        data.zIndex = Math.max(data.zIndex, parseInt(window.getComputedStyle(node).getPropertyValue('z-index')) || 0);\n\n        return this.getParentsConf(node.parentNode as AllowedElements, data);\n    }\n\n    private mod(n: number, m: number): number {\n        return ((n % m) + m) % m;\n    }\n}\n\nexport default new List();\n","import List from './List';\nimport { AllowedElements } from './types';\n\nexport default class EventInterface {\n    private element: AllowedElements;\n    private registerName: string;\n\n    private state: { ignoreOneTimeKeyUpEvent: boolean } = { ignoreOneTimeKeyUpEvent: false };\n\n    constructor(element: AllowedElements, registerName: string) {\n        this.element = element;\n        this.registerName = registerName;\n\n        this.element.addEventListener('blur', this, false);\n        this.element.addEventListener('focus', this, false);\n        this.element.addEventListener('click', this, false);\n        this.element.addEventListener('keyup', this, false);\n        this.element.addEventListener('keydown', this, false);\n    }\n\n    unbind(): void {\n        this.element.removeEventListener('blur', this, false);\n        this.element.removeEventListener('focus', this, false);\n        this.element.removeEventListener('click', this, false);\n        this.element.removeEventListener('keyup', this, false);\n        this.element.removeEventListener('keydown', this, false);\n    }\n\n    getElement(): AllowedElements {\n        return this.element;\n    }\n\n    handleEvent(event: Event): void {\n        switch (event.type) {\n            case 'focus':\n                List.attach(this.registerName, this.element);\n                break;\n\n            case 'blur':\n                List.detach();\n            case 'click':\n                List.hide();\n                break;\n\n            case 'keyup':\n                this.keyup(event as KeyboardEvent);\n                break;\n\n            case 'keydown':\n                this.keydown(event as KeyboardEvent);\n                break;\n        }\n    }\n\n    private keyup(event: KeyboardEvent): void {\n        if (this.state.ignoreOneTimeKeyUpEvent) {\n            this.state.ignoreOneTimeKeyUpEvent = false;\n            return;\n        }\n\n        const { value, selectionStart: caretPosition } = this.element;\n        if (event.type === 'keyup' && event.key === '{' && value.substr(caretPosition - 2, 2) === '{{') {\n            this.state.ignoreOneTimeKeyUpEvent = true;\n            this.addValueString('}}');\n        }\n\n        const bracketActiveWord = this.getBracketActiveWord();\n        if (bracketActiveWord !== null) {\n            List.filter(bracketActiveWord);\n\n            const { visible, partialFilter, data } = List.getState();\n            if (visible && (event.key === 'Backspace' || (event.key.length === 1 && event.key !== ' '))) {\n                if (event.key !== 'Backspace') {\n                    const addSuggestedString = data[0].substr(partialFilter.length);\n                    if (addSuggestedString) {\n                        this.addValueString(addSuggestedString, true);\n                    }\n                }\n\n                List.align();\n            }\n        } else {\n            List.hide();\n        }\n    }\n\n    private keydown(event: KeyboardEvent): void {\n        const { visible } = List.getState();\n        if (visible && ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) {\n            this.state.ignoreOneTimeKeyUpEvent = true;\n            if (['ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) event.preventDefault();\n\n            if (['ArrowRight', 'ArrowLeft', 'Enter'].includes(event.key)) {\n                List.hide();\n\n                if (event.key === 'Enter') {\n                    if (this.element.selectionStart !== this.element.selectionEnd) this.element.selectionStart = this.element.selectionEnd;\n                }\n            }\n\n            if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                List.selectByDirection(event.key === 'ArrowUp' ? 'up' : 'down');\n                const { partialFilter, data, selectedIndex } = List.getState();\n                const addSuggestedString = data[selectedIndex].substr(partialFilter.length);\n                this.addValueString(addSuggestedString, true);\n            }\n        }\n    }\n\n    private addValueString(addValue: string, select = false): void {\n        const { value, selectionStart, selectionEnd } = this.element;\n        this.element.value = [value.slice(0, selectionStart), addValue, value.slice(selectionEnd)].join('');\n        this.element.selectionStart = this.element.selectionEnd = selectionStart;\n        if (select) {\n            this.element.selectionEnd += addValue.length;\n        }\n    }\n\n    private getBracketActiveWord(): string | null {\n        const { value, selectionStart } = this.element;\n        let valueInBrackets = null;\n        let [startIndex, endIndex] = [value.lastIndexOf('{{', selectionStart - 2), value.indexOf('}}', selectionStart)];\n\n        if (startIndex >= 0 && endIndex > 0) {\n            const [startIndexReverse, endIndexReverse] = [value.lastIndexOf('}}', selectionStart - 2), value.indexOf('{{', selectionStart)];\n            if (startIndexReverse < startIndex && (endIndexReverse === -1 || endIndex < endIndexReverse)) {\n                const [startSpacePosition, endSpacePosition] = [value.lastIndexOf(' ', selectionStart - 1), value.indexOf(' ', selectionStart)];\n                startIndex = startSpacePosition > startIndex ? startSpacePosition + 1 : startIndex + 2;\n                endIndex = endSpacePosition < endIndex && endSpacePosition !== -1 ? endSpacePosition : endIndex;\n                valueInBrackets = value.substr(startIndex, endIndex - startIndex);\n            }\n        }\n        return valueInBrackets;\n    }\n}\n","import List, { ListData } from './List';\nimport EventsInterface from './EventsInterface';\n\nimport { AllowedElements } from './types';\n\nexport default class Register {\n    private name: string;\n    private elements: EventsInterface[] = [];\n\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    data(data?: ListData): ListData {\n        return List.data(this.name, data);\n    }\n\n    add(element: AllowedElements): void {\n        if (\n            !this.elements.some((el) => {\n                return el.getElement().isSameNode(element);\n            })\n        ) {\n            this.elements.push(new EventsInterface(element, this.name));\n        }\n    }\n\n    remove(element: AllowedElements): void {\n        this.elements = this.elements.filter((el) => {\n            if (el.getElement().isSameNode(element)) {\n                el.unbind();\n                return false;\n            }\n\n            return true;\n        });\n    }\n}\n","import Register from './Register';\n\nexport default class Autocomplete {\n    private static groups: Record<string, Register> = {};\n\n    public static getRegister(name = 'default'): Register {\n        let group = Autocomplete.groups[name];\n        if (group === undefined) {\n            group = new Register(name);\n            Autocomplete.groups[name] = group;\n        }\n\n        return group;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(628);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}